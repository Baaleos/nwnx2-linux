#
#    Copyright (C) 2007 Doug Swarin (zac@intertex.net)
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#    
#    $Id$
#    $Source$
#

CC	 = gcc
CXX      = gcc
GPERF    = gperf
RM	 = /bin/rm
MV	 = /bin/mv
CP	 = /bin/cp
SED      = /bin/sed
INSTALL	 = /usr/bin/install -c

INCS	 = -I. -I.. -I../.. -I ../../include -I/usr/local/include
LIBS	 = -L/usr/local/lib -lm -lz
DEFS	 = -D_REENTRANT -D_THREAD_SAFE
CFLAGS   = @CFLAGS@ -Wall -Werror $(DEFS) $(INCS)
CPPFLAGS = @CPPFLAGS@ -Wall -Werror $(DEFS) $(INCS)
LFLAGS   = @LDFLAGS@ -w -fPIC -shared -rdynamic

OFILES  = \
    common/c_GetIsUnarmedWeapon.o                \
    common/c_GetIsWeaponLight.o                  \
    funcs/f_GetAttackBonusAdjustment.o           \
    funcs/f_GetWeaponAbilityFeat.o               \
    funcs/f_GetWeaponDevastatingCriticalFeat.o   \
    funcs/f_GetWeaponEpicFocusFeat.o             \
    funcs/f_GetWeaponEpicSpecializationFeat.o    \
    funcs/f_GetWeaponFocusFeat.o                 \
    funcs/f_GetWeaponGreaterFocusFeat.o          \
    funcs/f_GetWeaponFinesseSize.o               \
    funcs/f_GetWeaponImprovedCriticalFeat.o      \
    funcs/f_GetWeaponIsMonkWeapon.o              \
    funcs/f_GetWeaponLegendaryFocusFeat.o        \
    funcs/f_GetWeaponOfChoiceFeat.o              \
    funcs/f_GetWeaponOption.o                    \
    funcs/f_GetWeaponOverwhelmingCriticalFeat.o  \
    funcs/f_GetWeaponPowerCriticalFeat.o         \
    funcs/f_GetWeaponSpecializationFeat.o        \
    funcs/f_GetWeaponSuperiorCriticalFeat.o      \
    funcs/f_IntToObject.o      			 \
    funcs/f_SetWeaponAbilityFeat.o               \
    funcs/f_SetWeaponDevastatingCriticalFeat.o   \
    funcs/f_SetWeaponEpicFocusFeat.o             \
    funcs/f_SetWeaponEpicSpecializationFeat.o    \
    funcs/f_SetWeaponFinesseSize.o               \
    funcs/f_SetWeaponFocusFeat.o                 \
    funcs/f_SetWeaponGreaterFocusFeat.o          \
    funcs/f_SetWeaponImprovedCriticalFeat.o      \
    funcs/f_SetWeaponIsMonkWeapon.o              \
    funcs/f_SetWeaponLegendaryFocusFeat.o        \
    funcs/f_SetWeaponOfChoiceFeat.o              \
    funcs/f_SetWeaponOption.o                    \
    funcs/f_SetWeaponOverwhelmingCriticalFeat.o  \
    funcs/f_SetWeaponPowerCriticalFeat.o         \
    funcs/f_SetWeaponSpecializationFeat.o        \
    funcs/f_SetWeaponSuperiorCriticalFeat.o      \
    hooks/h_GetABAbilityModifier.o               \
    hooks/h_GetCriticalConfirmationRoll.o        \
    hooks/h_GetCriticalMultiplier.o              \
    hooks/h_GetCriticalRange.o                   \
    hooks/h_GetEpicWeaponDevastatingCritical.o   \
    hooks/h_GetEpicWeaponFocus.o                 \
    hooks/h_GetEpicWeaponOverwhelmingCritical.o  \
    hooks/h_GetEpicWeaponSpecialization.o        \
    hooks/h_GetIsWeaponOfChoice.o                \
    hooks/h_GetUseMonkAttackTables.o             \
    hooks/h_GetWeaponFinesse.o                   \
    hooks/h_GetWeaponFocus.o                     \
    hooks/h_GetWeaponImprovedCritical.o          \
    hooks/h_GetWeaponSpecialization.o            \
    hooks/h_OffhandCritMultiplier.o              \
    local/l_GetAttackBonusAdjustment.o           \
    local/l_GetCriticalConfirmationAdjustment.o  \
    local/l_GetCriticalMultiplierAdjustment.o    \
    local/l_GetCriticalRangeAdjustment.o         \
    tables/t_WeaponAbility.o                     \
    tables/t_WeaponDevastatingCritical.o         \
    tables/t_WeaponEpicFocus.o                   \
    tables/t_WeaponEpicSpecialization.o          \
    tables/t_WeaponFinesseSize.o                 \
    tables/t_WeaponFocus.o                       \
    tables/t_WeaponGreaterFocus.o                \
    tables/t_WeaponImprovedCritical.o            \
    tables/t_WeaponIteration.o                   \
    tables/t_WeaponLegendaryFocus.o              \
    tables/t_WeaponMonk.o                        \
    tables/t_WeaponOfChoice.o                    \
    tables/t_WeaponOptions.o                     \
    tables/t_WeaponOverwhelmingCritical.o        \
    tables/t_WeaponPowerCritical.o               \
    tables/t_WeaponSpecialization.o              \
    tables/t_WeaponSuperiorCritical.o            \
    NWNXWeapons.o                                \
    plugin-weapons.o

all: nwnx_weapons.so


WeaponsStrCmds.h: WeaponsStrCmds.gperf
	$(GPERF) -L ANSI-C -tCG -m 10 -K name -H WeaponsStrCommandHash \
	  -N WeaponsStrCommandLookup -W WeaponsStrCommandList \
	  "WeaponsStrCmds.gperf" --output-file="gperf.out"
	$(SED) -i 's/\<\(\(MIN\|MAX\)_\(WORD_LENGTH\|HASH_VALUE\)\|TOTAL_KEYWORDS\)\>/NWNX_WEAPONS_STRCMD_\1/g' \
	  "gperf.out" || rm -f "gperf.out"
	$(SED) -i 's/^const struct/static const struct/' "gperf.out" || rm -f "gperf.out"
	$(MV) "gperf.out" "WeaponsStrCmds.h"

WeaponsObjCmds.h: WeaponsObjCmds.gperf
	$(GPERF) -L ANSI-C -tCG -m 10 -K name -H WeaponsObjCommandHash \
	  -N WeaponsObjCommandLookup -W WeaponsObjCommandList \
	  "WeaponsObjCmds.gperf" --output-file="gperf.out"
	$(SED) -i 's/\<\(\(MIN\|MAX\)_\(WORD_LENGTH\|HASH_VALUE\)\|TOTAL_KEYWORDS\)\>/NWNX_WEAPONS_OBJCMD_\1/g' \
	  "gperf.out" || rm -f "gperf.out"
	$(SED) -i 's/^const struct/static const struct/' "gperf.out" || rm -f "gperf.out"
	$(MV) "gperf.out" "WeaponsObjCmds.h"

NWNXWeapons.o: WeaponsStrCmds.h WeaponsObjCmds.h NWNXWeapons.h

nwnx_weapons.so: $(OFILES)
	$(CXX) $(LFLAGS) -o $@ $^ $(LIBS)

depend:
	$(CC) -MM $(CFLAGS) *.c > .depend

clean:
	$(RM) -f *.o */*.o *.so

distclean: clean
	$(RM) -f .depend WeaponsStrCmds.h WeaponsObjCmds.h
