NWNXDIR = ../..
CPPFLAGS = $(PLUGIN_CPPFLAGS) -I$(NWNXDIR) $(INC)
LFLAGS   = $(PLUGIN_LFLAGS) -shared
LIBS = -I${JAVA_HOME}/include/ -L${JAVA_HOME}/jre/lib/i386/server/ -ljvm
INC = -I${JAVA_HOME}/include/ -I${JAVA_HOME}/include/linux

NWNXBASE=$(NWNXDIR)/NWNXBase.o $(NWNXDIR)/gline.o

all: gen_const gen_native
	make -C . nwnx_jvm.so java/dist/org.nwnx.nwnx2.jvm.jar

.PHONY: gen_native gen_const
gen_native:
	ruby ./build/gen_java.rb ./build/funcs.nss
gen_const:
	ruby ./build/gen_const.rb ./build/consts.nss

nwnxjvm_NWScript.h:
	javah -jni -o nwnxjvm_NWScript.h nwnxjvm.NWScript

nwnx_jvm.so: FunctionHooks.o NWNXJVM.o plugin-jvm.o org_nwnx_nwnx2_jvm_NWScript.o org_nwnx_nwnx2_jvm_NWScript_addon.o
	$(CXX) $(LFLAGS) -o $@ $^ $(LIBS) $(NWNXBASE)

.PHONY: org.nwnx.nwnx2.jvm.jar
java/dist/org.nwnx.nwnx2.jvm.jar: gen_const java/src/org/nwnx/nwnx2/jvm/NWScript.java
	cd java && ant -q

clean:
	/bin/rm -f *.o *.so *~ \
		org_nwnx_nwnx2_jvm_registerNWScript.cpp \
		org_nwnx_nwnx2_jvm_NWScript.h org_nwnx_nwnx2_jvm_NWScript.cpp \
		java/src/org/nwnx/nwnx2/jvm/NWScript.java \
		java/src/org/nwnx/nwnx2/jvm/Action.java \
		java/src/org/nwnx/nwnx2/jvm/constants/*.java
	cd java && ant clean
