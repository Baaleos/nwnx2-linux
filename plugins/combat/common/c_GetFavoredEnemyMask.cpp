#include "NWNXCombat.h"

extern CNWNXCombat combat;

uint64_t GetFavoredEnemyMask(CNWSCreature *cre) {
#define FE(flags, feat, race) \
    if ( nwn_GetHasFeat(cre->cre_stats, feat) ) \
	flags |= 1 << race

    uint64_t mask = 0;    
    int ranger = nwn_GetLevelByClass(cre->cre_stats, CLASS_TYPE_RANGER);
    int hs =  nwn_GetLevelByClass(cre->cre_stats, CLASS_TYPE_HARPER);
    int lvl = ranger + hs;
    if ( lvl == 0 ) { return mask; }

    FE(mask, FEAT_FAVORED_ENEMY_DWARF, RACIAL_TYPE_DWARF);
    FE(mask, FEAT_FAVORED_ENEMY_ELF, RACIAL_TYPE_ELF);
    FE(mask, FEAT_FAVORED_ENEMY_GNOME, RACIAL_TYPE_GNOME);
    FE(mask, FEAT_FAVORED_ENEMY_HALFLING, RACIAL_TYPE_HALFLING);
    FE(mask, FEAT_FAVORED_ENEMY_HALFELF, RACIAL_TYPE_HALFELF);
    FE(mask, FEAT_FAVORED_ENEMY_HALFORC, RACIAL_TYPE_HALFORC);
    FE(mask, FEAT_FAVORED_ENEMY_HUMAN, RACIAL_TYPE_HUMAN);
    FE(mask, FEAT_FAVORED_ENEMY_ABERRATION, RACIAL_TYPE_ABERRATION);
    FE(mask, FEAT_FAVORED_ENEMY_ANIMAL, RACIAL_TYPE_ANIMAL);
    FE(mask, FEAT_FAVORED_ENEMY_BEAST, RACIAL_TYPE_BEAST);
    FE(mask, FEAT_FAVORED_ENEMY_CONSTRUCT, RACIAL_TYPE_CONSTRUCT);
    FE(mask, FEAT_FAVORED_ENEMY_DRAGON, RACIAL_TYPE_DRAGON);
    FE(mask, FEAT_FAVORED_ENEMY_GOBLINOID, RACIAL_TYPE_HUMANOID_GOBLINOID);
    FE(mask, FEAT_FAVORED_ENEMY_MONSTROUS, RACIAL_TYPE_HUMANOID_MONSTROUS);
    FE(mask, FEAT_FAVORED_ENEMY_ORC, RACIAL_TYPE_HUMANOID_ORC);
    FE(mask, FEAT_FAVORED_ENEMY_REPTILIAN, RACIAL_TYPE_HUMANOID_REPTILIAN);
    FE(mask, FEAT_FAVORED_ENEMY_ELEMENTAL, RACIAL_TYPE_ELEMENTAL);
    FE(mask, FEAT_FAVORED_ENEMY_FEY, RACIAL_TYPE_FEY);
    FE(mask, FEAT_FAVORED_ENEMY_GIANT, RACIAL_TYPE_GIANT);
    FE(mask, FEAT_FAVORED_ENEMY_MAGICAL_BEAST, RACIAL_TYPE_MAGICAL_BEAST);
    FE(mask, FEAT_FAVORED_ENEMY_OUTSIDER, RACIAL_TYPE_OUTSIDER);
    FE(mask, FEAT_FAVORED_ENEMY_SHAPECHANGER, RACIAL_TYPE_SHAPECHANGER);
    FE(mask, FEAT_FAVORED_ENEMY_UNDEAD, RACIAL_TYPE_UNDEAD);
    FE(mask, FEAT_FAVORED_ENEMY_VERMIN, RACIAL_TYPE_VERMIN);

    // No feats for these racial types, RACIAL_TYPE_PLANT is CEP?
    // FE(mask, , RACIAL_TYPE_OOZE);
    // FE(mask, , RACIAL_TYPE_PLANT);

    return mask;

#undef FE
}
